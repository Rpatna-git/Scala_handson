[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\rajes\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\rajes\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 1.8.0_311)
[debug]       Load.loadUnit: plugins took 65.4613ms
[debug]       Load.loadUnit: defsScala took 0.1976ms
[debug] [Loading] Scanning directory C:\Users\rajes\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\rajes\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.2577 ms
[debug]           Load.resolveProject(global-plugins) took 34.8192ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\rajes\.sbt\1.0\plugins, plugins: List(<none>))) took 69.8399ms
[debug] [Loading] Done in C:\Users\rajes\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 85.8638ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2733ms
[debug]     Load.loadUnit(file:/C:/Users/rajes/.sbt/1.0/plugins/, ...) took 157.6825ms
[debug]   Load.apply: load took 580.8145ms
[debug]   Load.apply: resolveProjects took 4.5346ms
[debug]   Load.apply: finalTransforms took 48.0804ms
[debug]   Load.apply: config.delegates took 6.2736ms
[debug]   Load.apply: Def.make(settings)... took 296.3668ms
[debug]   Load.apply: structureIndex took 84.2658ms
[debug]   Load.apply: mkStreams took 1.2387ms
[info] loading global plugins from C:\Users\rajes\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2471.0761ms
[debug]           Load.loadUnit: plugins took 20.2905ms
[debug]           Load.loadUnit: defsScala took 0.0049ms
[debug] [Loading] Scanning directory D:\Scala\Udemy_scala\project
[debug]             Load.loadUnit: mkEval took 8.0ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Scala\Udemy_scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.6451 ms
[info] loading settings for project udemy_scala-build from idea.sbt ...
[debug]               Load.resolveProject(udemy_scala-build) took 2.0629ms
[debug]             Load.loadTransitive: finalizeProject(Project(id udemy_scala-build, base: D:\Scala\Udemy_scala\project, plugins: List(<none>))) took 4.1314ms
[debug] [Loading] Done in D:\Scala\Udemy_scala\project, returning: (udemy_scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1936.4816ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.2312ms
[debug]         Load.loadUnit(file:/D:/Scala/Udemy_scala/project/, ...) took 1961.1626ms
[debug]       Load.apply: load took 1962.5418ms
[debug]       Load.apply: resolveProjects took 0.1417ms
[debug]       Load.apply: finalTransforms took 7.5985ms
[debug]       Load.apply: config.delegates took 0.2846ms
[debug]       Load.apply: Def.make(settings)... took 73.6438ms
[debug]       Load.apply: structureIndex took 18.9711ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from D:\Scala\Udemy_scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3927.7265ms
[debug]     Load.loadUnit: defsScala took 0.0057ms
[debug] [Loading] Scanning directory D:\Scala\Udemy_scala
[debug]       Load.loadUnit: mkEval took 0.4541ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.295 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 21.4136ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Scala\Udemy_scala, plugins: List(<none>))) took 25.313ms
[debug] [Loading] Done in D:\Scala\Udemy_scala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 804.1236ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.2885ms
[debug]   Load.loadUnit(file:/D:/Scala/Udemy_scala/, ...) took 4736.8457ms
[debug] Load.apply: load took 4737.8205ms
[debug] Load.apply: resolveProjects took 0.0777ms
[debug] Load.apply: finalTransforms took 18.0637ms
[debug] Load.apply: config.delegates took 0.3114ms
[debug] Load.apply: Def.make(settings)... took 54.9714ms
[debug] Load.apply: structureIndex took 19.8248ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to Scala_prac1 (in build file:/D:/Scala/Udemy_scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62740 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62740, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Scala_prac1 (in build file:/D:/Scala/Udemy_scala/)
[debug] > Exec(idea-shell, None, None)
